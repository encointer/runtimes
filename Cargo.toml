[workspace.package]
version = "1.0.0"
authors = ["Polkadot Fellowship"]
edition = "2021"
repository = "https://github.com/polkadot-fellows/runtimes.git"
license = "GPL-3.0-only" # TODO <https://github.com/polkadot-fellows/runtimes/issues/29>

[workspace]
resolver = "2"

members = [
	"chain-spec-generator",
	"relay/kusama",
	"relay/kusama/constants",
	"relay/polkadot",
	"relay/polkadot/constants",
	"system-parachains/asset-hubs/asset-hub-kusama",
	"system-parachains/asset-hubs/asset-hub-kusama/primitives",
	"system-parachains/asset-hubs/asset-hub-polkadot",
	"system-parachains/asset-hubs/asset-hub-polkadot/primitives",
	"system-parachains/bridge-hubs/bridge-hub-kusama",
	"system-parachains/bridge-hubs/bridge-hub-kusama/primitives",
	"system-parachains/bridge-hubs/bridge-hub-polkadot",
	"system-parachains/bridge-hubs/bridge-hub-polkadot/primitives",
	"system-parachains/collectives/collectives-polkadot",
	"system-parachains/collectives/collectives-polkadot/constants",
	"system-parachains/constants",
	"system-parachains/encointer",
	"system-parachains/gluttons/glutton-kusama",
	"integration-tests/emulated/chains/relays/kusama",
	"integration-tests/emulated/chains/relays/polkadot",
	"integration-tests/emulated/chains/parachains/assets/asset-hub-kusama",
	"integration-tests/emulated/chains/parachains/assets/asset-hub-polkadot",
	"integration-tests/emulated/chains/parachains/bridges/bridge-hub-kusama",
	"integration-tests/emulated/chains/parachains/bridges/bridge-hub-polkadot",
	"integration-tests/emulated/chains/parachains/collectives/collectives-polkadot",
	"integration-tests/emulated/chains/parachains/testing/penpal",
	"integration-tests/emulated/helpers",
	"integration-tests/emulated/networks/kusama-system",
	"integration-tests/emulated/networks/polkadot-system",
	"integration-tests/emulated/networks/kusama-polkadot-system",
	"integration-tests/emulated/tests/assets/asset-hub-kusama",
	"integration-tests/emulated/tests/assets/asset-hub-polkadot",
	"integration-tests/emulated/tests/bridges/bridge-hub-kusama",
	"integration-tests/emulated/tests/bridges/bridge-hub-polkadot",
]

[profile.release]
# Polkadot runtime requires unwinding.
panic = "unwind"
opt-level = 3

[profile.production]
inherits = "release"
lto = true
codegen-units = 1

[patch.crates-io]
encointer-balances-tx-payment = { path = "../pallets/balances-tx-payment" }
encointer-balances-tx-payment-rpc = { path = "../pallets/balances-tx-payment/rpc" }
encointer-balances-tx-payment-rpc-runtime-api = { path = "../pallets/balances-tx-payment/rpc/runtime-api" }
encointer-ceremonies-assignment = { path = "../pallets/ceremonies/assignment" }
encointer-primitives = { path = "../pallets/primitives" }
pallet-encointer-balances = { path = "../pallets/balances" }
pallet-encointer-bazaar = { path = "../pallets/bazaar" }
pallet-encointer-bazaar-rpc = { path = "../pallets/bazaar/rpc" }
pallet-encointer-bazaar-rpc-runtime-api = { path = "../pallets/bazaar/rpc/runtime-api" }
pallet-encointer-ceremonies = { path = "../pallets/ceremonies" }
pallet-encointer-ceremonies-rpc = { path = "../pallets/ceremonies/rpc" }
pallet-encointer-ceremonies-rpc-runtime-api = { path = "../pallets/ceremonies/rpc/runtime-api" }
pallet-encointer-communities = { path = "../pallets/communities" }
pallet-encointer-communities-rpc = { path = "../pallets/communities/rpc" }
pallet-encointer-communities-rpc-runtime-api = { path = "../pallets/communities/rpc/runtime-api" }
pallet-encointer-democracy = { path = "../pallets/democracy" }
pallet-encointer-faucet = { path = "../pallets/faucet" }
pallet-encointer-reputation-commitments = { path = "../pallets/reputation-commitments" }
pallet-encointer-scheduler = { path = "../pallets/scheduler" }
